<Project Sdk="Microsoft.NET.Sdk">
  <!-- <PropertyGroup>
    <IsWindows Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))' == 'true'">true</IsWindows>
    <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
  </PropertyGroup> -->

  <PropertyGroup>
    <TargetFrameworks>net472;net48;net5.0;net6.0</TargetFrameworks>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerfileContext>..\..\..\..\..\..\..</DockerfileContext>
    <OutputType>Library</OutputType>
    <Authors>$(Authors)</Authors>
    <Company>ANEO</Company>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <IsPackable>true</IsPackable>
    <PackageOutputPath>../../../publish</PackageOutputPath>
    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <LangVersion>latest</LangVersion>
    <SignAssembly>True</SignAssembly>
    <AssemblyOriginatorKeyFile>../../kp.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugType>Embedded</DebugType>
    <IncludeSymbols>true</IncludeSymbols>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
  </PropertyGroup>

  <Target Name="BeforeBuild">
  <Message Importance="High" Text="This the framework sss $(TargetFramework)" />
  </Target>

<ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="6.0.0" />
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.0" PrivateAssets="All" />
    <PackageReference Include="protobuf-net" Version="3.1.17" />
    <PackageReference Include="System.Reactive" Version="5.0.0" />
  </ItemGroup>

  <Target Name="DeleteLocalCache" BeforeTargets="Pack">
    <RemoveDir Directories="$(NugetPackageRoot)/$(PackageId.ToLower())/$(ArmonikVersion)" />
  </Target>

</Project>
